***************
*** 196,201 ****
          Log.v(TAG, "onCreate()");
          super.onCreate(savedInstanceState);
  
          // Load shared libraries
          String errorMsgBrokenLib = "";
          try {
--- 196,210 ----
          Log.v(TAG, "onCreate()");
          super.onCreate(savedInstanceState);
  
+         SDLActivity.initialize();
+         // So we can call stuff from static callbacks
+         mSingleton = this;
+     }
+ 
+     // We don't do this in onCreate because we unpack and load the app data on a thread
+     // and we can't run setup tasks until that thread completes.
+     protected void finishLoad() {
+ 
          // Load shared libraries
          String errorMsgBrokenLib = "";
          try {
***************
*** 639,645 ****
      Handler commandHandler = new SDLCommandHandler();
  
      // Send a message from the SDLMain thread
-     boolean sendCommand(int command, Object data) {
          Message msg = commandHandler.obtainMessage();
          msg.arg1 = command;
          msg.obj = data;
--- 648,654 ----
      Handler commandHandler = new SDLCommandHandler();
  
      // Send a message from the SDLMain thread
+     protected boolean sendCommand(int command, Object data) {
          Message msg = commandHandler.obtainMessage();
          msg.arg1 = command;
          msg.obj = data;
***************
*** 1051,1056 ****
          return Arrays.copyOf(filtered, used);
      }
  
      // APK expansion files support
  
      /** com.android.vending.expansion.zipfile.ZipResourceFile object or null. */
--- 1061,1081 ----
          return Arrays.copyOf(filtered, used);
      }
  
+     /**
+      * Calls turnActive() on singleton to keep loading screen active
+      */
+     public static void triggerAppConfirmedActive() {
+         mSingleton.appConfirmedActive();
+     }
+ 
+     /**
+      * Trick needed for loading screen, overridden by PythonActivity
+      * to keep loading screen active
+      */
+     public void appConfirmedActive() {
+     }
+ 
+ 
      // APK expansion files support
  
      /** com.android.vending.expansion.zipfile.ZipResourceFile object or null. */
***************
*** 1341,1354 ****
      };
  
      public void onSystemUiVisibilityChange(int visibility) {
-         if (SDLActivity.mFullscreenModeActive && (visibility & View.SYSTEM_UI_FLAG_FULLSCREEN) == 0 || (visibility & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0) {
- 
              Handler handler = getWindow().getDecorView().getHandler();
              if (handler != null) {
                  handler.removeCallbacks(rehideSystemUi); // Prevent a hide loop.
                  handler.postDelayed(rehideSystemUi, 2000);
              }
- 
          }
      }    
  
--- 1366,1378 ----
      };
  
      public void onSystemUiVisibilityChange(int visibility) {
+         // SDL2 BUGFIX (see sdl bug #4424 ) - REMOVE WHEN FIXED IN UPSTREAM !!
+         if (SDLActivity.mFullscreenModeActive && ((visibility & View.SYSTEM_UI_FLAG_FULLSCREEN) == 0 || (visibility & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0)) {
              Handler handler = getWindow().getDecorView().getHandler();
              if (handler != null) {
                  handler.removeCallbacks(rehideSystemUi); // Prevent a hide loop.
                  handler.postDelayed(rehideSystemUi, 2000);
              }
          }
      }    
  
***************
*** 1475,1480 ****
          String[] arguments = SDLActivity.mSingleton.getArguments();
  
          Log.v("SDL", "Running main function " + function + " from library " + library);
          SDLActivity.nativeRunMain(library, function, arguments);
  
          Log.v("SDL", "Finished main function");
--- 1499,1505 ----
          String[] arguments = SDLActivity.mSingleton.getArguments();
  
          Log.v("SDL", "Running main function " + function + " from library " + library);
+         SDLActivity.mSingleton.appConfirmedActive();
          SDLActivity.nativeRunMain(library, function, arguments);
  
          Log.v("SDL", "Finished main function");
